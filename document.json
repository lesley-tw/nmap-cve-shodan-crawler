[
    {
        "vul": "Penetration Testing: Re: Brute force . htpasswd", 
        "description": "Hi,\n\n I have received some e-mail from people (thanks to\nall of us) telling me to mangle the hashes in a\ncorrect password file format. It is not the problem\nfor me. I will try to explain.\n\nIf you take a MD5 hash from a Unix/Linux box, the hash\nis beginning whith $1$ (and I think by $2$ in some\ncase) but if you are taking a MD5 hash from a .htacess\n(or .htpasswd) file using by Apache, it begins by\n$apr1$. In this case, John and MD5Crack doesn't work\n(I also tried to force the format with -format:MD5\nwith john). It tried them on W32 and Linux.\nThe MD5 hashes are generating with htpasswd.exe (on\nW32) that is a tool provided with Apache.\n\nFor the example, I have generating a MD5 hash :\ntest:$apr1$K2......$0afaV4Pb0N8k1udUVBHo./\nIn this case the password is 'test' but I have no tool\n(MD5crack and John doesn't work) that allow me to\ncrack this .htpasswd file.\n\nAny help is welcome. Thank for your help\n\nDominique\n\n --- H D Moore <sflist () digitaloffense net> a \u00e9crit\u00a0: >\nMDCrack is one of the nicest MD5 brute forcers I\n \n\n___________________________________________________________\nDo You Yahoo!? -- Une adresse @yahoo.fr gratuite et en fran\u00e7ais !\nYahoo! Courrier :  \n\n----------------------------------------------------------------------------\nThis list is provided by the SecurityFocus Security Intelligence Alert (SIA)\nService. For more information on SecurityFocus' SIA service which\nautomatically alerts you to the latest security vulnerabilities please see:\n \n\n"
    }, 
    {
        "vul": "Full Disclosure: Re: local buffer overflow in  htpasswd  for apache 1.3 ...", 
        "description": "\nRead the first post by Luiz.   This is only applicable if your running\napache chrooted and htpasswd is part of that chrooted environment.\n\nOn Fri, Oct 29, 2004 at 11:53:16PM +0200, Andr? Malo wrote:\n \n_______________________________________________\nFull-Disclosure - We believe in it.\nCharter:  \n\n"
    }, 
    {
        "vul": "Full Disclosure: local buffer overflow in  htpasswd  for apache 1.3.31 ...", 
        "description": "This was posted on the full-disclosure list sept 16 2004 by\nLuiz Fernando.\n\n \n\nThe nessus check for this vulnerability recommends upgrading to\nApache version 1.3.32:\n\n \n\nBut in Apache 1.3.33:\n\nlachoy# grep strcpy /install/src/apache_1.3.33/src/support/htpasswd.c\n    strcpy(record, user);\n        strcpy(pwfilename, argv[i]);\n    strcpy(user, argv[i + 1]);\n        strcpy(password, argv[i + 2]);\n            strcpy(scratch, line);\n\nIt is still vulnerable.\n\nI patched my version that seemed to thwart the exploit offered by\nLuiz.  Here is the diff:\n\nroot@bokchoy:~/tes/apache_1.3.33/src/support# diff -uN  htpasswd.orig.c\nhtpasswd.c\n--- htpasswd.orig.c     2004-10-28 18:20:13.000000000 -0400\n+++ htpasswd.c  2004-10-28 18:17:25.000000000 -0400\n@@ -202,9 +202,9 @@\n        ap_cpystrn(record, \"resultant record too long\", (rlen - 1));\n        return ERR_OVERFLOW;\n     }\n-    strcpy(record, user);\n+    strncpy(record, user,MAX_STRING_LEN - 1);\n     strcat(record, \":\");\n-    strcat(record, cpw);\n+    strncat(record, cpw,MAX_STRING_LEN - 1);\n     return 0;\n }\n\n@@ -410,14 +410,14 @@\n            fprintf(stderr, \"%s: filename too long\\n\", argv[0]);\n            return ERR_OVERFLOW;\n        }\n-       strcpy(pwfilename, argv[i]);\n+       strncpy(pwfilename, argv[i], MAX_STRING_LEN-1);\n        if (strlen(argv[i + 1]) > (sizeof(user) - 1)) {\n            fprintf(stderr, \"%s: username too long (>%lu)\\n\", argv[0],\n                    (unsigned long)(sizeof(user) - 1));\n            return ERR_OVERFLOW;\n        }\n     }\n-    strcpy(user, argv[i + 1]);\n+    strncpy(user, argv[i + 1],MAX_STRING_LEN-1);\n     if ((arg = strchr(user, ':')) != NULL) {\n        fprintf(stderr, \"%s: username contains illegal character\n'%c'\\n\",\n                argv[0], *arg);\n@@ -429,7 +429,7 @@\n                    (unsigned long)(sizeof(password) - 1));\n            return ERR_OVERFLOW;\n        }\n-       strcpy(password, argv[i + 2]);\n+       strncpy(password, argv[i + 2],MAX_STRING_LEN - 1 );\n     }\n\n #ifdef WIN32\n@@ -553,7 +553,7 @@\n                putline(ftemp, line);\n                continue;\n            }\n-           strcpy(scratch, line);\n+           strncpy(scratch, line,MAX_STRING_LEN -1);\n            /*\n             * See if this is our user.\n             */\n\n\nLarry W. Cashdollar\n \n\n_______________________________________________\nFull-Disclosure - We believe in it.\nCharter:  \n\n"
    }, 
    {
        "vul": "Full Disclosure: Apache 1.3.37  htpasswd  buffer overflow vulnerability", 
        "description": "Synopsis: Apache 1.3.37 htpasswd buffer overflow vulnerability\nVersion: 1.3.37 (latest 1.3.xx)\n\nProduct\n=======\nApache htpasswd utility\n\nIssue\n=====\nA buffer overflow vilnerability has been found, it is dangerous only on\nenvironment where the binary is suid root.\n\nDetails\n=======\nIncorrect validation on the size of user input allows to copy a string, via\nstrcpy, to a fixed size buffer.\nFile: htpasswd.c, Line 421.\n\nSolution\n========\nApply this patch to htpasswd.c\n\n-----8<-----8<-----8<-----8<-----8<-----8<-----8<-----8<-----8<-----8<-----8<--\n\n 415,419c415,420\n <       if (strlen(argv[i + 1]) > (sizeof(user) - 1)) {\n <           fprintf(stderr, \"%s: username too long (>%lu)\\n\", argv[0],\n <                   (unsigned long)(sizeof(user) - 1));\n <           return ERR_OVERFLOW;\n <       }\n ---\n >     }\n >     if (strlen(argv[i + 1]) > (sizeof(user) - 1)) {\n >       fprintf(stderr, \"%s: username too long (>%lu)\\n\", argv[0],\n >       (unsigned long)(sizeof(user) - 1));\n >       return ERR_OVERFLOW;\n >\n--->8----->8----->8----->8----->8----->8----->8----->8----->8----->8----->8-----\n\nAffected Versions\n==================\n1.3.37 -  \n\nNotes & References\n==================\nAnother similar bug was discovered by Luiz Fernando [1], a patch was written\n\nby  Larry Cashdollar wich also fixed the bug i'm posting, but it seems not\nto be\napplied on the latest versions of apache 1.3.xx.\n\nMichael Engert submitted another patch[1] which also fixed this bug and\nfilled\nout a bug report [1], but it wasn't applied.\n\nHave a look at Other posts[3][4] on this (and similar) issues.\n\nA bug report[5] on this issue was filled out.\n\nCredits\n=======\nMatias S. Soler - gnuler [at] gmail [dot] com\nLuiz Fernando\nMichael Engert\n\n\n1 -  \n2 -  \n3 -  \n4 -\n \n5 -  \n\n--\nMatias S. Soler\n _______________________________________________\nFull-Disclosure - We believe in it.\nCharter:  \nHosted and sponsored by Secunia - "
    }, 
    {
        "vul": "Penetration Testing:  htpasswd  decrypt", 
        "description": "Hi all,\n\n   For a hack lab in that I'm doing  I reach a point where I get a \n htpasswd file in clear in an Apache server.\n \n   Is there any tool that given the crypted password I can try to brute \n force (or use a dictionary attack) and get the original password? There \n are a lot of MD5 password crackers but they don't state if they work for \n htpasswd generated passwords.\n \n  Thanks!\n\n  Miguel\n\n------------------------------------------------------------------------\nThis list is sponsored by: Information Assurance Certification Review Board\n\n Prove to peers and potential employers without a doubt that you can actually do a proper penetration test. IACRB CPT and CEPT certs require a full practical examination in order to become certified. \n \n \n------------------------------------------------------------------------\n\n"
    }, 
    {
        "vul": "Vulnerability Development: Re: apache + . htpasswd  - bypass pwd ...", 
        "description": "On Thu, Apr 25, 2002 at 12:19:45PM -0400, Jose Nazario wrote:\n \n  Please note that it is safe only if all scripts (PHP, perl, etc) are\nrunning with user privileges.\n\n  If the suexec wrapped isn't active, or if PHP doesn't run in CGI mode,\nfiles created by scripts will be owned by the server uid (usually nobody) .\n\n  There are plenty of free PHP and Perl scripts that are coming with an\n\"installer\". People upload a package to the server, browse an URL to launch\nthe installation script, answer a few questions, and files are automatically\ncopied into proper locations. These files typically contain passwords for\nSQL databases, and once copied by the installation script, they belong to\nnobody.\n\n  +SymlinksIfOwnerMatch doesn't prevent users from creating a script that\nwill create a symbolic link to some other customer's files as nobody. Owners\nwill match.\n\n  All symbolic links can be forbidden (-FollowSymlinks and nothing else) .\n  \n  But hard links are worse. Apache will follow them regardless of your\nconfiguration files. As a lot of customers are using the same packages, it's\nquite easy to find out what files have to be linked.\n\n  So, to sleep more quietly :\n  \n - Use suexec.\n \n - Use PHP safe_mode if you really can't run PHP in CGI mode.\n \n - Place users home directories in unguessable locations\n(/users/B67h6768/9dqzsu_-zeu/_6p+/john/ , with all directories no read\nattribute on directories) .\n\n-- \n __  /*-      Frank DENIS (Jedi/Sector One) <j () 42-Networks Com>     -*\\  __\n \\ '/    <a href=\" ;> Secure FTP Server </a>    \\' /\n  \\/  <a href=\" ;> Misc. free software </a>  \\/\n\n"
    }, 
    {
        "vul": "Penetration Testing: Re:  htpasswd  decrypt", 
        "description": "I haven't been aware of it, too.\nIf you know it, let me know.\n\nIt's not easy to write bruteforce decryptor as it generates new\npassword each time upon generation.\n\n Automatically using MD5 format.\ntest:$apr1$O9B501zi$LIb3jgek2pqVEv29qfCqO0\n\n\n Automatically using MD5 format.\ntest:$apr1$Rekfkt5.$8NeNTA7C/Oy4jEuCgrnBE/\n\n\n Automatically using MD5 format.\ntest:$apr1$PEH.OBdt$wE/nHRG.FYo2bzmAfxfIn1\n\n\n Automatically using MD5 format.\ntest:$apr1$BtwEARib$2WWdK3nGlAWVutTRkFyV20\n\n\n\n\n2010/6/18 Miguel Gonz\u00e1lez Casta\u00f1os <miguel_3_gonzalez () yahoo es>:\n \n------------------------------------------------------------------------\nThis list is sponsored by: Information Assurance Certification Review Board\n\nProve to peers and potential employers without a doubt that you can actually do a proper penetration test. IACRB CPT \nand CEPT certs require a full practical examination in order to become certified.\n\n \n------------------------------------------------------------------------\n\n"
    }, 
    {
        "vul": "Penetration Testing: Brute force . htpasswd", 
        "description": "Hi,\n\n I am looking for a program to brute force .htpasswd\nusing MD5 encryption using by Apache on W32 platform.\nI am not looking for a prg like Brutus because I want\nto do a brute force attack off-line. Password cracker\nlike John doesn't work against this type of MD5, it is\nworking against MD5 using by Linux for example.\n\nThanks for your help.\n\nD.V.\n\n___________________________________________________________\nDo You Yahoo!? -- Une adresse @yahoo.fr gratuite et en fran\u00e7ais !\nYahoo! Courrier :  \n\n----------------------------------------------------------------------------\nThis list is provided by the SecurityFocus Security Intelligence Alert (SIA)\nService. For more information on SecurityFocus' SIA service which\nautomatically alerts you to the latest security vulnerabilities please see:\n \n\n"
    }, 
    {
        "vul": "Full Disclosure: Re: Apache 1.3.37  htpasswd  buffer overflow ...", 
        "description": "On 02 Jan 07, at 12:20, Matias Soler wrote:\n \nIf htpasswd is setuid, then one could just as easily:\n\n   htpasswd -bp /etc/passwd toor x:0:0:toor::/:/bin/sh\n   htpasswd -bp /etc/shadow toor xxa8fjDF6WqBA:0:0:99999:7:::\n\nand get root. (Or any number of things - sudoers, crontab, SSH keys -  \ntake your pick.)\n\nIt's possible that this buffer overflow may be significant in very  \nlimited circumstances - if the utility is executed from a web  \napplication, perhaps. However, this seems like a rather limited-scope  \nissue.\n\n-- Andrew Farmer\n\n_______________________________________________\nFull-Disclosure - We believe in it.\nCharter:  \nHosted and sponsored by Secunia -  \n\n"
    }, 
    {
        "vul": "Bugtraq: Apache web server 2.2:  htpasswd  predictable salt weakness", 
        "description": "Disclaimer:\n\nThis is not the first time this issue has been discussed. Andreas\nSteinmetz posted about the problem for an Apache httpd release in 2003.\n   \n   \nPhilipp Krammer reported that he notifed the vendor over five years\nago, in January 2003.  \n\nWhat's new is\n  1) The vendor has released another major version of the \n     affected software, Apache web server 2.2, with the same flaw.\n  2) While no official patch is available (due to the vendor's inaction),\n     an unofficial patch is now available.\n\n-Peter\n \n\nBackground:\n\nApache web server supports three different algorithms for \n\"encrypted\" passwords for HTTP Basic authentication:\n - Unix-style crypt() passwords: uses a 12 bit salt (4096\n   possible values) and only the first 8 characters of the \n   cleartext password are used\n - SHA hashes: no salt; any given password can have only one\n   {SHA} representation\n - MD5 passwords: based on the BSD MD5 crypt routine, this\n   provides for 48 bits of salt, for a theoretical 281 trillion\n   (281,474,976,710,656) possible representations of any password\n\nApache web server includes a command-line utility called 'htpasswd'\nfor managing the files used for HTTP Basic authentication. It can be \nused (depending on the host OS) to create encrypted passwords with \nany of the supported algorithms. \n\nProblem:\n\nThe htpasswd utility uses predictable salts for the salted algoritms\n(Unix-style \"CRYPT\" and MD5). htpasswd uses the standard C rand()\nfunction to generate \"random\" salts. In order to use rand(), htpasswd\nseeds the random number generator with the srand() function. And that's\nwhere the Apache developers made a critical mistake -- htpasswd \nmerely uses the time of day (seconds since the Epoch, time(NULL)) to\nseed the random number generator. \n\nAs a result:\n - Salts created by htpasswd are very predictable. \n - The universe of salts for htpasswd is far less than the MD5 algorithm\n   provides for -- 29 bits vs. 48, or 0.000191 percent of the range that\n   should be used for MD5.\n - Any passwords encrypted by htpasswd within the same second of\n   system clock time will have the same salt, e.g.\n      $ htpasswd -nbm user1 pass1; htpasswd -nbm user2 pass2; \\\n        htpasswd -nbm user3 pass2\n      user1:$apr1$7jv93/..$2J9qu4mN2zms5O42vw/XE.\n      user2:$apr1$7jv93/..$55cRqVaWTSB1YQpeD5uYe0\n      user3:$apr1$7jv93/..$55cRqVaWTSB1YQpeD5uYe0\n   All three users have the same salt, \"7jv93/..\", and user2 and user3 \n   have the same encrypted password representation. \n\nClearly, this is not good.\n\nFurthermore, as you can see in that example, and as Andreas Krennmair\nreported to the Apache Group in 2004, the htpasswd utility does not\nuse the full 48 bits of salt for the MD5 algorithm -- the last two\ncharacters are always \"..\". So htpasswd tries creates 36-bit salt strings. \nGiven that the srand() problem both reduces the universe to something \nlike 29 bits[0] *and* makes the salt highly predictable, this 36-vs-48 \ndistinction is a moot point -- as long as the srand() seeding is bad.\n\nThe problem appears completely contained within the htpasswd utility;\nApache web server handles all properly encrypted passwords as it should.\n\nWorkarounds:\n\n1) If you are concerned about the possibilty of the vastly reduced \n   salt space making your password tables vulnerable to pre-computed\n   dictionary attacks, use an updated htpasswd utility to re-encrypt\n   all MD5 or CRYPT passwords.\n\n2) Use an alternate tool for generating your password hashes. \n   Implementations of the CRYPT and \"apr1\" MD5 algorithms are available\n   for various programming languages and platforms -- you don't need to\n   use the inferior tool from the Apache project.\n\nSolution:\n\nhtpasswd should at least use a more random seed for the srand() calls\nso that rand() can produce less predictable salts. It should also, as\nAndreas Krennmair noted, make full use of the 48-bit-wide salt capability \nof its \"apr1\" MD5 algorithm.\n\nPatches:\n\nPatches are available in Apache's \"issues\" database that correct both the \nweak seeding of srand() and, thanks to Andreas, the 36/48 bit salt size \nfor MD5: \n   \n\nHere's sample output from a patched htpasswd utility:\n\n$ htpasswd -nbm user1 pass1; htpasswd -nbm user2 pass2; \\\n  htpasswd -nbm user3 pass2\nuser1:$apr1$wMdual6C$4.JZNIEfbWvF7OKvpsTGO0\nuser2:$apr1$LCXYBrpM$6ypjd9FWcVjt6niwCHst71\nuser3:$apr1$7vefL1ic$6WdQmN9sMUQvQvMGVyHU//\n\nThe patch I submitted to the Apache group\n 1) by default makes use of the /dev/urandom device that is available\n    on most modern open systems OSes \n 2) allows the user to specify another seed source (such as /dev/random)\n    via an environment variable\n 3) prints a warning if it has to fall back to using time()\n\nUsers of Microsoft Windows or other target platforms that lack /dev/urandom\nmight want to improve on this approach with appropriate APIS such as\nRtlGenRandom on Windows. Also, the patch provides no updates to the htpasswd \nman page documentation.\n\nHistory:\n\nVulnerability reported via vendor's bug tracking database, and source\ncode patch made available, on 25 January 2008.\n\nVendor security contact notified via email on 4 February 2008.\n\nVendor response: \n\nNone, as of 13 February 2008.\n\n----------------------------------------------------------------------\n[0] For any given PRNG. In theory, different machines could have \ndifferent PRNG algorithms, providing some additional security. But in\nmy tests, most common Linux flavors (Linux being perhaps the most \npopular platfor for Apache web server) use the same PRNG and physically\ndifferent systems produce the same output from htpasswd for any given \nclock time / time() value. 29 bits are enough to represent every time()\nvalue since before the first release of Apache web server. As noted in\nBugzilla, the narrower the timeframe an attacker is interesetd in, the\nsmaller the list of possible salts.\n\n"
    }, 
    {
        "vul": "CVE-2014-8243", 
        "Description": "Linksys SMART WiFi firmware on EA2700 and EA3500 devices; before 2.1.41 build 162351 on E4200v2 and EA4500 devices; before 1.1.41 build 162599 on EA6200 devices; before 1.1.40 build 160989 on EA6300, EA6400, EA6500, and EA6700 devices; and before 1.1.42 build 161129 on EA6900 devices allows remote attackers to obtain the administrator's MD5 password hash via a direct request for the /.htpasswd URI."
    }, 
    {
        "vul": "CVE-2014-5015", 
        "Description": "bozotic HTTP server (aka bozohttpd) before 20140708, as used in NetBSD, truncates paths when checking .htpasswd restrictions, which allows remote attackers to bypass the HTTP authentication scheme and access restrictions via a long path."
    }, 
    {
        "vul": "CVE-2013-5755", 
        "Description": "config/.htpasswd in Yealink IP Phone SIP-T38G has a hardcoded password of (1) user (s7C9Cx.rLsWFA) for the user account, (2) admin (uoCbM.VEiKQto) for the admin account, and (3) var (jhl3iZAe./qXM) for the var account, which makes it easier for remote attackers to obtain access via unspecified vectors."
    }, 
    {
        "vul": "CVE-2011-3198", 
        "Description": "Domain Technologie Control (DTC) before 0.34.1 includes a password in the -b command line argument to htpasswd, which might allow local users to read the password by listing the process and its arguments."
    }, 
    {
        "vul": "CVE-2009-1556", 
        "Description": "img/main.cgi on the Cisco Linksys WVC54GCA wireless video camera with firmware 1.00R22 and 1.00R24 allows remote authenticated users to read arbitrary files in img/ via a filename in the next_file parameter, as demonstrated by reading .htpasswd to obtain the admin password, a different vulnerability than CVE-2004-2507."
    }, 
    {
        "vul": "CVE-2008-3395", 
        "Description": "Calacode @Mail 5.41 on Linux uses weak world-readable permissions for (1) webmail/libs/Atmail/Config.php and (2) webmail/webadmin/.htpasswd, which allows local users to obtain sensitive information by reading these files. NOTE: the provenance of this information is unknown; the details are obtained solely from third party information."
    }, 
    {
        "vul": "CVE-2006-1079", 
        "Description": "htpasswd, as used in Acme thttpd 2.25b and possibly other products such as Apache, might allow local users to gain privileges via shell metacharacters in a command line argument, which is used in a call to the system function. NOTE: since htpasswd is normally installed as a non-setuid program, and the exploit is through command line options, perhaps this issue should not be included in CVE. However, if there are some typical or recommended configurations that use htpasswd with sudo privileges, or common products that access htpasswd remotely, then perhaps it should be included."
    }, 
    {
        "vul": "CVE-2006-1078", 
        "Description": "Multiple buffer overflows in htpasswd, as used in Acme thttpd 2.25b, and possibly other products such as Apache, might allow local users to gain privileges via (1) a long command line argument and (2) a long line in a file. NOTE: since htpasswd is normally installed as a non-setuid program, and the exploit is through command line options, perhaps this issue should not be included in CVE. However, if there are some typical or recommended configurations that use htpasswd with sudo privileges, or common products that access htpasswd remotely, then perhaps it should be included."
    }, 
    {
        "vul": "CVE-2002-1233", 
        "Description": "A regression error in the Debian distributions of the apache-ssl package (before 1.3.9 on Debian 2.2, and before 1.3.26 on Debian 3.0), for Apache 1.3.27 and earlier, allows local users to read or modify the Apache password file via a symlink attack on temporary files when the administrator runs (1) htpasswd or (2) htdigest, a re-introduction of a vulnerability that was originally identified and addressed by CVE-2001-0131."
    }, 
    {
        "vul": "CVE-2002-0917", 
        "Description": "CGIScript.net csPassword.cgi stores .htpasswd files under the web document root, which could allow remote authenticated users to download the file and crack the passwords of other users."
    }, 
    {
        "vul": "CVE-2001-0893", 
        "Description": "Acme mini_httpd before 1.16 allows remote attackers to view sensitive files under the document root (such as .htpasswd) via a GET request with a trailing /."
    }, 
    {
        "vul": "CVE-2001-0892", 
        "Description": "Acme Thttpd Secure Webserver before 2.22, with the chroot option enabled, allows remote attackers to view sensitive files under the document root (such as .htpasswd) via a GET request with a trailing /."
    }, 
    {
        "vul": "CVE-2001-0839", 
        "Description": "ibillpm.pl in iBill password management system generates weak passwords based on a client's MASTER_ACCOUNT, which allows remote attackers to modify account information in the .htpasswd file via brute force password guessing."
    }, 
    {
        "vul": "CVE-2001-0131", 
        "Description": "htpasswd and htdigest in Apache 2.0a9, 1.3.14, and others allows local users to overwrite arbitrary files via a symlink attack."
    }, 
    {
        "vul": "", 
        "Description": "ZPanel 10.0.0.2  htpasswd  Module Username Command Execution\n"
    }, 
    {
        "vul": "", 
        "Description": "htpasswd  and htdigest in Apache 2.0a9, 1.3.14, and others allows local users to overwrite arbitrary files via a symlink attack.\n"
    }, 
    {
        "vul": "", 
        "Description": "htpasswd , as used in Acme thttpd 2.25b and possibly other products such as Apache, might allow local users to gain privileges via shell metacharacters in a command line argument, which is used in a call to the system function.  NOTE: since  htpasswd  is normally installed as a non-setuid program\n"
    }, 
    {
        "vul": "", 
        "Description": "htpasswd  Apache 1.3.31 - Local Exploit\n"
    }, 
    {
        "vul": "", 
        "Description": "Multiple buffer overflows in  htpasswd , as used in Acme thttpd 2.25b, and possibly other products such as Apache, might allow local users to gain privileges via (1) a long command line argument and (2) a long line in a file.  NOTE: since  htpasswd  is normally installed as a non-setuid program\n"
    }, 
    {
        "vul": "", 
        "Description": "ZPanel 10.0.0.2  htpasswd  Module Username Command Execution\n"
    }, 
    {
        "vul": "", 
        "Description": "Domain Technologie Control (DTC) before 0.34.1 includes a password in the -b command line argument to  htpasswd , which might allow local users to read the password by listing the process and its arguments.\n"
    }, 
    {
        "vul": "", 
        "Description": "CGIScript.net csPassword.cgi stores . htpasswd  files under the web document root, which could allow remote authenticated users to download the file and crack the passwords of other users.\n"
    }, 
    {
        "vul": "", 
        "Description": "Acme mini_httpd before 1.16 allows remote attackers to view sensitive files under the document root (such as . htpasswd ) via a GET request with a trailing /.\n"
    }, 
    {
        "vul": "", 
        "Description": "Acme Thttpd Secure Webserver before 2.22, with the chroot option enabled, allows remote attackers to view sensitive files under the document root (such as . htpasswd ) via a GET request with a trailing /.\n"
    }, 
    {
        "vul": "", 
        "Description": "bozotic HTTP server (aka bozohttpd) before 20140708, as used in NetBSD, truncates paths when checking . htpasswd  restrictions, which allows remote attackers to bypass the HTTP authentication scheme and access restrictions via a long path.\n"
    }, 
    {
        "vul": "", 
        "Description": "ibillpm.pl in iBill password management system generates weak passwords based on a client's MASTER_ACCOUNT, which allows remote attackers to modify account information in the . htpasswd  file via brute force password guessing.\n"
    }, 
    {
        "vul": "", 
        "Description": "img/main.cgi on the Cisco Linksys WVC54GCA wireless video camera with firmware 1.00R22 and 1.00R24 allows remote authenticated users to read arbitrary files in img/ via a filename in the next_file parameter, as demonstrated by reading . htpasswd  to obtain the admin password, a different vulnerability than CVE-2004-2507.\n"
    }, 
    {
        "vul": "", 
        "Description": "config/. htpasswd  in Yealink IP Phone SIP-T38G have a hardcoded password of (1) user (s7C9Cx.rLsWFA) for the user account, (2) admin (uoCbM.VEiKQto) for the admin account, and (3) var (jhl3iZAe./qXM) for the var account, which makes it easier for remote attackers to obtain access via unspecified vectors.\n"
    }, 
    {
        "vul": "", 
        "Description": "A regression error in the Debian distributions of the apache-ssl package (before 1.3.9 on Debian 2.2, and before 1.3.26 on Debian 3.0), for Apache 1.3.27 and earlier, allows local users to read or modify the Apache password file via a symlink attack on temporary files when the administrator runs (1)  htpasswd  or (2) htdigest, a re-introduction of a vulnerability that was originally identified and addressed by CVE-2001-0131.\n"
    }, 
    {
        "vul": "", 
        "Description": "Linksys SMART WiFi firmware on EA2700 and EA3500 devices; before 2.1.41 build 162351 on E4200v2 and EA4500 devices; before 1.1.41 build 162599 on EA6200 devices; before 1.1.40 build 160989 on EA6300, EA6400, EA6500, and EA6700 devices; and before 1.1.42 build 161129 on EA6900 devices allows remote attackers to obtain the administrator's MD5 password hash via a direct request for the /. htpasswd  URI.\n"
    }, 
    {
        "vul": "", 
        "Description": "Calacode @Mail 5.41 on Linux uses weak world-readable permissions for (1) webmail/libs/Atmail/Config.php and (2) webmail/webadmin/. htpasswd , which allows local users to obtain sensitive information by reading these files.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.\n"
    }
]